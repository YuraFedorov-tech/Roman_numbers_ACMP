import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
 
public class Rome {
    private static void FindSimpleNumber(int n, ArrayList<Integer> list) {
         
         
        boolean buzy[]=new boolean[5000];
        for(int i=3;i<n;i+=2){
        if(!buzy[i])
            chek(buzy,i,n);
                 
        }
        Inside(buzy,list,n);    
         
    }
    private static void Inside(boolean[] buzy, ArrayList<Integer> list, int n) {
        list.add(2);
        for(int i=3;i<n;i+=2)
            if(!buzy[i])
                list.add(i);
         
    }
    private static void chek(boolean[] buzy, int j, int n) {
        int e=j*j;
        if(e<0)
            return;
        for(int i=j*2;i<n;i+=j)
            buzy[i]=true;
         
         
    }
 
     
     
    public static void main(String[] args) {
         
        Scanner M = new Scanner(System.in);
 
        String s = M.nextLine().trim();
        B(s);
 
        System.out.println();
 
    }
 
    private static void B(String f) {
        String[] s = f.split("/");
        String aaa[] = { "I", "V", "X", "L", "C", "D", "M" };
           char a[] =  { 'I', 'V', 'X', 'L', 'C', 'D', 'M' };
            int aa[] = { 1,    5,   10, 50, 100, 500, 1000 };
        boolean allRight = Chek(a, s[0]);
        boolean allRight2 = Chek(a, s[1]);
        if (!allRight | !allRight2) {
            System.out.println("ERROR");
            return;
        }
    int numberOne[]=FindNumber(s[0],a,aa);
    int numberTwo[]=FindNumber(s[1],a,aa);
    if(numberOne[0]>999 |numberTwo[0]>999){
        System.out.println("ERROR");
        return;
    }
     
     
    //System.out.println(numberOne[0]+" "+numberTwo[0]);
    ArrayList<Integer> list = new ArrayList<Integer>();
    FindSimpleNumber(1000,list);
    //System.out.println(list.size());
//  System.out.println(list);
     
    LessNumberes(numberOne,numberTwo,list);
    String S1=FindS(a,aa,numberOne[0]);
    String S2=FindS(a,aa,numberTwo[0]);
    if(numberTwo[0]!=1){
        System.out.println(S1+"/"+S2);
    }else
        System.out.println(S1); 
     
    }
 
    private static String FindS(char[] a, int[] aa, int n) {
String s="";
String h=Integer.toString(n);
int hundred=n/100;
int tenes=(n-hundred*100)/10;
int num=n-  hundred*100-tenes*10;
String ans="";  
if(hundred!=0){
    s=Sotni(n);
    ans+=s;
}
if(tenes!=0){
    s=FindTenes(tenes);
    ans+=s;
}
if(num!=0){
    s=FindNum(num);
    ans+=s;
}       
        return ans;
    }
    private static String FindNum(int num) {
        switch(num){
        case 9:return"IX";
        case 8:return"VIII";
        case 7:return"VII";
        case 6:return"VI";
        case 5:return"V";
        case 4:return"IV";
        case 3:return"III";
        case 2:return"II";
        case 1:return"I";
        }
        return "-5";
    }
    private static String FindTenes(int tenes) {
switch(tenes){
case 9:return"XC";
case 8:return"LXXX";
case 7:return"LXX";
case 6:return"LX";
case 5:return"L";
case 4:return"XL";
case 3:return"XXX";
case 2:return"XX";
case 1:return"X";
}
 
        return "-5";
    }
    private static String Sotni(int n) {
        if(n>=900)
            return "CM";
        if(n>=800)
            return "DCCC";
        if(n>=700)
            return "DCC";
        if(n>=600)
            return "DC";
        if(n>=500)
            return "D";
        if(n>=400)
            return "CD";
        if(n>=300)
            return "CCC";
        if(n>=200)
            return "CC";
        if(n>=100)
            return "C";
         
        return "";
    }
    private static void LessNumberes(int[] numberOne, int[] numberTwo,
            ArrayList<Integer> list) {
        int n=list.size();
    for(int i=0;i<n;i++){
        int x=list.get(i);
        while(numberOne[0]%x==0 &numberTwo[0]%x ==0){
            numberOne[0]/=x;
            numberTwo[0]/=x;
        }
    }
         
         
    }
    private static int []FindNumber(String s, char[] a, int[] aa) {
        s+="I";
        int n=s.length();
int ans[]={0};
 
for(int i=0;i<n-1;i++){ 
    int first=findNumber(a,aa,s.charAt(i));
    int second=findNumber(a,aa,s.charAt(i+1));
        if(first>=second){
            ans[0]+=first;
        }else{
            ans[0]+=second-first;
            i++;
        }
         
}
     
     
 
 
        return ans;
    }
 
    private static int findNumber(char[] a, int[] aa, char charAt) {
        int i=0;
        for(;i<7;i++)
            if(charAt==a[i])
                break;
        return aa[i];
    }
 
    private static boolean Chek(char[] a, String s) {
        for (int i = 0; i < s.length(); i++) {
            boolean g = ChekOneLetter(a, s.charAt(i));
            if (!g)
                return false;
        }
        return true;
    }
 
    private static boolean ChekOneLetter(char[] a, char charAt) {
        for (int i = 0; i < 7; i++) {
            if (a[i] == charAt)
                return true;
        }
        return false;
    }
 
}
